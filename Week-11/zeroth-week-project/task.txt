## Workshop

The goal is to create an application, which communicates with a third-party API,
has token based authentication and configured test environment

### Write a back-end application

Write an application with basic endpoints that implements a REST API,
communicates with a third party API and stores the received data in a database.

#### Acceptance Criteria

- [Retrofit](https://square.github.io/retrofit/)
  is implemented in the application
- The application is communicating with the
  [The Movie Database API](https://developers.themoviedb.org/3/getting-started/introduction)
  or any other third-party API
- The application should connect to a SQL database
  and store the received data there
- The application should have an REST endpoint
  where the entries from the database are listed
- The database connection details should not be
  "hardcoded" into the application,
  it should be read from environment variables

### Create Token Authentication

Your Web API endpoints should be authorized with a valid JWT Token. !!!OK!!!
Use symmetric key to generate tokens with validation date. ???HE???

#### Acceptance Criteria

- The application endpoints required to be authorized  !!!OK!!!
- The application is validating the token from the request !!!OK!!!
- The application endpoints return `401` when the token is invalid or missing !!!OK!!!

### Test Environment

You are able to create the test environment
where you connect to an in-memory database.

#### Acceptance Criteria

- The application should connect to an in-memory database when the environment
  is set to `Test` !!!OK!!!
- The application should connect to a SQL database when the environment is set
  to `Production` !!!OK!!!

### Mocking

You are able to use a mocking framework to test services.

#### Acceptance Criteria

- The application has at least 3 tests where you use a mock object

### (Optional) Mapping

Separate the Entity Models from the ones you gave back in the response.
Create DTO models and use a mapper to conversion and vice-versa.

#### Acceptance Criteria

- The response should contain DTO models
- The service layer is converting the DTO models into entity models and
  vice-versa